-- MySQL Script generated by MySQL Workbench
-- Wed Mar 20 23:33:41 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema RentCars
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema RentCars
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `RentCars` DEFAULT CHARACTER SET utf8 ;
USE `RentCars` ;

-- -----------------------------------------------------
-- Table `RentCars`.`Car`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `RentCars`.`Car` (
  `idCar` INT NOT NULL,
  `Status` VARCHAR(10) NOT NULL,
  `Mileage` INT UNSIGNED NOT NULL,
  `Transmission` VARCHAR(45) NOT NULL,
  `Supplier` VARCHAR(45) NOT NULL,
  `Engine type` VARCHAR(20) NOT NULL,
  `Class car` VARCHAR(20) NOT NULL,
  `HasConditioner` TINYINT NOT NULL,
  PRIMARY KEY (`idCar`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RentCars`.`History`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `RentCars`.`History` (
  `idHistory` INT NOT NULL,
  `idUser` INT NOT NULL,
  `Date` DATE NULL,
  `idCar` INT NOT NULL,
  PRIMARY KEY (`idHistory`),
  UNIQUE INDEX `UserName_UNIQUE` (`idUser` ASC) VISIBLE,
  INDEX `fk_History_Car1_idx` (`idCar` ASC) VISIBLE,
  CONSTRAINT `fk_History_Car1`
    FOREIGN KEY (`idCar`)
    REFERENCES `RentCars`.`Car` (`idCar`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RentCars`.`Password`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `RentCars`.`Password` (
  `idUser` INT NOT NULL,
  `Password` VARCHAR(32) NOT NULL,
  UNIQUE INDEX `idUser_UNIQUE` (`idUser` ASC) VISIBLE,
  PRIMARY KEY (`Password`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RentCars`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `RentCars`.`User` (
  `idUser` INT NOT NULL,
  `UserName` VARCHAR(45) NOT NULL,
  `Position` VARCHAR(20) NOT NULL,
  `idHistory` INT NOT NULL,
  `Password` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`idUser`),
  UNIQUE INDEX `UserName_UNIQUE` (`UserName` ASC) VISIBLE,
  INDEX `fk_User_History1_idx` (`idHistory` ASC) VISIBLE,
  INDEX `fk_User_Password1_idx` (`Password` ASC) VISIBLE,
  CONSTRAINT `fk_User_History1`
    FOREIGN KEY (`idHistory`)
    REFERENCES `RentCars`.`History` (`idHistory`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_Password1`
    FOREIGN KEY (`Password`)
    REFERENCES `RentCars`.`Password` (`Password`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RentCars`.`Booking`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `RentCars`.`Booking` (
  `idBooking` INT NOT NULL,
  `idCar` INT NOT NULL,
  `Date` DATE NOT NULL,
  `Cost` INT UNSIGNED NOT NULL,
  `idUser` INT NOT NULL,
  `idCar` INT NOT NULL,
  PRIMARY KEY (`idBooking`),
  UNIQUE INDEX `idCar_UNIQUE` (`idCar` ASC) VISIBLE,
  INDEX `fk_Booking_User_idx` (`idUser` ASC) VISIBLE,
  INDEX `fk_Booking_Car1_idx` (`idCar` ASC) VISIBLE,
  CONSTRAINT `fk_Booking_User`
    FOREIGN KEY (`idUser`)
    REFERENCES `RentCars`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Booking_Car1`
    FOREIGN KEY (`idCar`)
    REFERENCES `RentCars`.`Car` (`idCar`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
